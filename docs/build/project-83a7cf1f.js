import{s}from"./projects-0e012d83.js";class a{constructor(s,a,e){this.name=s,this.data=a,this.imagesUrls=e}static async create(s,e){const t=await Promise.all(e.images.map((async({id:s,data:a})=>{const e=await fetch(a),t=await e.blob();return{id:s,url:URL.createObjectURL(t)}})));return new a(s,e,t)}dispose(){this.imagesUrls.forEach((s=>URL.revokeObjectURL(s.url)))}async setImage(s,a=""){const e=a;if(a||(a=this.getName(a)),!a)return!1;e&&this.removeImage(e);const t=await this.toDataURL(s);return this.data.images.push({id:a,data:t}),this.imagesUrls.push({id:a,url:URL.createObjectURL(s)}),!0}renameImage(s){const a=a=>a.id==s,e=this.getName(s);return!!e&&(this.data.images.find(a).id=e,this.imagesUrls.find(a).id=e,!0)}getName(s){do{const a=this.imagesUrls.some((a=>a.id==s))?"Escolha uma identificação diferente para a imagem.":"Escolha a identificação da imagem.";if(!(s=prompt(a,s)))break}while(this.imagesUrls.some((a=>a.id==s)));return s&&(s=s.replaceAll(" ","-")),s}save(){s(this.name,this.data)}async copyImage(s){if(!(s=this.getName(s)))return"";const a=a=>a.id==s,e=this.imagesUrls.find(a);this.imagesUrls.push(Object.assign(Object.assign({},e),{id:s}));const t=this.data.images.find(a);return this.data.images.push(Object.assign(Object.assign({},t),{id:s})),s}removeImage(s){const a=a=>a.id==s,e=this.imagesUrls.findIndex(a);URL.revokeObjectURL(this.imagesUrls[e].url),this.imagesUrls.splice(e,1);const t=this.data.images.findIndex(a);this.data.images.splice(t,1)}async toDataURL(s){return await new Promise(((a,e)=>{const t=new FileReader;t.onloadend=()=>a(t.result),t.onerror=e,t.readAsDataURL(s)}))}}export{a as P};
